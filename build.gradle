// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        jcenter()
        mavenCentral()
    }
    dependencies {
	    classpath 'com.android.tools.build:gradle:7.1.2'
//        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21' //1.8.10
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext{

    compileSdkVersion = 33
    buildToolsVersion = '23.0.3'

    group = 'org.eclipse.paho'

    sampleArchivesBaseName = 'org.eclipse.paho.android.sample'
    sampleVersion = '1.1.1'

    serviceArchivesBaseName = 'org.eclipse.paho.android.service'
    serviceVersion = '1.1.1'

    clientVersion = '1.1.0'

    mavenUrl = "https://repo.eclipse.org/content/repositories/paho-releases/"

    supportLibVersion = '24.2.1'

}

def getSdkDirFromLocalProperties() {
    def rootDir = project.rootDir
    def localProperties = new File(rootDir, "local.properties")
    Properties properties = new Properties()
    localProperties.withInputStream { instr ->
        properties.load(instr)
    }
    properties.getProperty('sdk.dir')
}


def androidHome = System.env['ANDROID_HOME']

def androidHomeIsDefined = androidHome?.trim()

def sdkDir = androidHomeIsDefined ? androidHome : getSdkDirFromLocalProperties()

println "SDK dir: $sdkDir"


allprojects {

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://jitpack.io' }

        //  个推
        maven {
            url "https://mvn.gt.getui.com/nexus/content/repositories/releases/"
        }
        maven {
            url 'https://mvn.getui.com/nexus/content/repositories/releases'
        }
        maven { url "https://mirrors.tencent.com/nexus/repository/maven-public/" }
        //google()

        mavenCentral()
        maven { url "https://jitpack.io" }
        jcenter()
        maven {
            url "file://$sdkDir/extras/android/m2repository/"
        }
    }

    version = rootProject.ext.serviceVersion
    group = rootProject.ext.group
}
